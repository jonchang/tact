name: Python package

on:
  push:
    branches: master
    tags: v*
  pull_request: []

jobs:
  automerge:
    needs: build
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    steps:
    - name: Automerge dependencies
      uses: actions/github-script@v2
      with:
        script: |
          github.pulls.merge({
            ...context.repo,
            pull_number: context.payload.pull_request.number,
            merge_method: "squash"
          })

  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - name: Install apt packages
      run: |
        sudo apt update
        sudo apt install libopenblas-dev
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install poetry
    - name: Check tags
      if: startsWith(github.event.ref, 'refs/tags')
      id: tag
      run: |
        # double echo to strip whitespace
        gitd=$(echo $(git describe --tags))
        echo "::set-output name=tag::$gitd"
        poetryv=$(echo v$(poetry version | cut -d' ' -f2))
        echo $gitd
        echo $poetryv
    - name: Install package
      run: poetry install -v
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --ignore=E302 --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: poetry run pytest --script-launch-mode=subprocess
    - name: Build distribution package
      id: build
      run: |
        set -eux
        # Torture git-describe into an acceptable Python version format
        new_tag=$(git describe --tags | cut -c2- | sed 's/-/+/' | sed 's/-/./g')
        echo $new_tag
        echo "::set-output name=version::$new_tag"
        poetry version $new_tag
        poetry build
    - uses: actions/upload-artifact@v2
      if: matrix.python-version == '3.9'
      with:
        name: ${{ steps.build.outputs.version }}
        path: dist
    - if: startsWith(github.event.ref, 'refs/tags') && matrix.python-version == '3.9'
      uses: pypa/gh-action-pypi-publish@v1.4.1
      with:
        user: __token__
        password: ${{ secrets.pypi_key }}
    - if: startsWith(github.event.ref, 'refs/tags') && matrix.python-version == '3.9'
      uses: dawidd6/action-homebrew-bump-formula@master
      with:
        tap: jonchang/biology
        formula: tact
        token: ${{ secrets.GITHUB_PAT }}
