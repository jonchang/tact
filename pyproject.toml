[project]
name = "tact"
version = "0.6.0"
description = "Taxonomic addition for complete trees: Adds tips to a backbone phylogeny using taxonomy simulated with birth-death models"
authors = [
    { name = "Jonathan Chang", email = "me@jonathanchang.org" },
    { name = "Dan Rabosky", email = "drabosky@umich.edu" },
    { name = "Michael Alfaro", email = "michaelalfaro@ucla.edu" },
]
maintainers = [
    { name = "Jonathan Chang", email = "me@jonathanchang.org" },
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10,<4"
dynamic = ["classifiers"]
dependencies = [
    "scipy>=1.13",
    "numpy>=2.2",
    "click>=7,<9",
    "DendroPy>=4.5,<6.0",
    "portion>=2.2",
    "toml>=0.10",
]

[project.optional-dependencies]
dev = [
    "pytest~=6.2",
    "pytest-cov~=2.12",
    "pytest-benchmark~=3.4",
    "pytest-console-scripts~=1.2",
    "hypothesis~=6.14",
]

[project.urls]
homepage = "https://tact.jonathanchang.org"
repository = "https://github.com/jonchang/tact"
documentation = "https://tact.jonathanchang.org"
issue = "https://github.com/jonchang/tact/issues"
changelog = "https://tact.jonathanchang.org/news/"
sponsor = "https://github.com/sponsors/jonchang"

[project.scripts]
tact_add_taxa = "tact.cli_add_taxa:main"
tact_add_config = "tact.cli_add_toml:main"
tact_build_taxonomic_tree = "tact.cli_taxonomy:main"
tact_check_results = "tact.cli_check_trees:main"

[tool.poetry]
include = ["examples"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics"
]

[tool.ruff]
line-length = 118

[tool.ruff.lint]
fixable = ["ALL"]
select = [
    "NPY", # numpy warnings
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "D",   # pydocstyle
    "DOC", # pydoclint
    "I",   # isort
    "RUF", # ruff
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "ICN", # flake8-import-conventions
    "FA",  # flake8-future-annotations
    "C4",  # flake8-comprehensions
    "A"    # flake8-builtins
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry_core>=2.0"]
build-backend = "poetry.core.masonry.api"
